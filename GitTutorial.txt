git --version //Print version of Git

git config --global user.name "username"	//Gives user a username

git config --global user.email "firstname.lastname@email.com" //Gives user an email

git config --list	//Settings for Git

git config user.email //View user settings for email

clear	//Clear screen

git help	//Help commands for git

git help commit		//Opens commit help page

/*
Locate the folder for the git repository through ls and cd.
*/

git init //initializes empty git repository

git add . //Add all changes made to the project

git commit -m "This is a commit" //Takes a snapshot in time and enables the user to return to this point, if further changes are made in the project. The quotation marks is used to describe the changes
 "This message is used to describe changes that was made in this commit".

git log //View commit history

git log --author="Storhaj" //Shows commits made by the person

git status //status of your working directory and the git folder. If changes are made in the working directory that is not commited, it will be visible if git status is ran.

git add file.txt //adds a file called file.txt to the staging area

/*
Git workflow, working copy -> staging area -> repository
*/

git commit -m "Adding an updated version of the Git tutorial file" //commits changes to the GitTutorial.txt in the repository

git log //Show the two commits made to the repository

git add GitTutorial.txt		//adds GitTutorial.txt to the stageing area

git commit -m "Modified GitTutorial with improvements" //commits the changes on GitTutorial.txt to the repository

git add  .	//adds all files to the stageing area, even if multiple

git commit -m "This is how to edit multiple files" //Commits multiple files to the repository

git diff	//Compares and visualizes differences from the repository and the working repository.

/*
git diff will not compare files in the staging area!!!
*/

git diff --staged //Compares differences within the staging area and the Git repository 

git rm third.txt //removes the file third.txt, this command removes the file from the working repository and the git repository.

git status //still shows the file that was deleted and the change needs to be commited for the file to get removed. 

git commit -m "This is the point in time where i deleted third.txt" //Now the commit is done and the file is deleted

/**********
Create first.txt
Chang name of first.txt to index.txt

git add index.txt


git rm first.txt  


git commit -m "rename first.txt to index.txt"
***********/

git mv index.txt home.txt		//Rename file from index.txt to home.txt

Create a folder
hot mv home.txt Folder/newfilenewfolder
git commit -m "Renamed file and put into new folder"




git init //create a Git repository
git add .
git commit -m "This is the very first commit"



git commit -am "Cleaned up the HTML comments"		//skipps staging area and commit directly from working copy to repositary
/*
Be careful when using command above

Grabs everything in working copy
Any changes that was made is pushed into repository
Only used when simple edits are made on few files

*/

//take files from repository and replace the working copy

git status

git checkout -- index.html //take something from repository and make it a working copy

git reset HEAD file.html //Removes file from staging area and can be adjusted as a working copy.


/*
first > second > third > second
*/


git checkout 4528e794 -- New.txt//check out old file (just add a dew letters from the commit code)

git commit -am "undoing previous mistakes"



/*

GITHUB

*/

git remote add PublicRepo https://github.com/storhaj/Projects.git //set remote repo to be named PublicRepo

git remote //view remote repo

_____________________________________________________________________________________________________________________________________

/************ GIT BASH COMMANDS ********************/

pwd //Print working directory, tells the user where the user is located.

cd ~ //Takes user to the home directory

cd .. //Takes user back one directory

ls //Lists all folders in the directory

ls -la //Shows all files including the hidden files

cd desktop //Changes the directory to desktop
